// Copyright (C) 2023  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/08/2024 23:59:38"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          DE10_LITE_Golden_Top
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module DE10_LITE_Golden_Top_vlg_vec_tst();
// constants                                           
// general purpose registers
reg ADC_CLK_10;
reg [15:0] treg_ARDUINO_IO;
reg treg_ARDUINO_RESET_N;
reg [15:0] treg_DRAM_DQ;
reg [35:0] treg_GPIO;
reg [2:1] GSENSOR_INT;
reg treg_GSENSOR_SDI;
reg treg_GSENSOR_SDO;
reg [1:0] KEY;
reg MAX10_CLK1_50;
reg MAX10_CLK2_50;
reg [9:0] SW;
// wires                                               
wire [15:0] ARDUINO_IO;
wire ARDUINO_RESET_N;
wire [12:0] DRAM_ADDR;
wire [1:0] DRAM_BA;
wire DRAM_CAS_N;
wire DRAM_CKE;
wire DRAM_CLK;
wire DRAM_CS_N;
wire [15:0] DRAM_DQ;
wire DRAM_LDQM;
wire DRAM_RAS_N;
wire DRAM_UDQM;
wire DRAM_WE_N;
wire [35:0] GPIO;
wire GSENSOR_CS_N;
wire GSENSOR_SCLK;
wire GSENSOR_SDI;
wire GSENSOR_SDO;
wire [7:0] HEX0;
wire [7:0] HEX1;
wire [7:0] HEX2;
wire [7:0] HEX3;
wire [7:0] HEX4;
wire [7:0] HEX5;
wire [9:0] LEDR;
wire [3:0] VGA_B;
wire [3:0] VGA_G;
wire VGA_HS;
wire [3:0] VGA_R;
wire VGA_VS;

// assign statements (if any)                          
assign ARDUINO_IO = treg_ARDUINO_IO;
assign ARDUINO_RESET_N = treg_ARDUINO_RESET_N;
assign DRAM_DQ = treg_DRAM_DQ;
assign GPIO = treg_GPIO;
assign GSENSOR_SDI = treg_GSENSOR_SDI;
assign GSENSOR_SDO = treg_GSENSOR_SDO;
DE10_LITE_Golden_Top i1 (
// port map - connection between master ports and signals/registers   
	.ADC_CLK_10(ADC_CLK_10),
	.ARDUINO_IO(ARDUINO_IO),
	.ARDUINO_RESET_N(ARDUINO_RESET_N),
	.DRAM_ADDR(DRAM_ADDR),
	.DRAM_BA(DRAM_BA),
	.DRAM_CAS_N(DRAM_CAS_N),
	.DRAM_CKE(DRAM_CKE),
	.DRAM_CLK(DRAM_CLK),
	.DRAM_CS_N(DRAM_CS_N),
	.DRAM_DQ(DRAM_DQ),
	.DRAM_LDQM(DRAM_LDQM),
	.DRAM_RAS_N(DRAM_RAS_N),
	.DRAM_UDQM(DRAM_UDQM),
	.DRAM_WE_N(DRAM_WE_N),
	.GPIO(GPIO),
	.GSENSOR_CS_N(GSENSOR_CS_N),
	.GSENSOR_INT(GSENSOR_INT),
	.GSENSOR_SCLK(GSENSOR_SCLK),
	.GSENSOR_SDI(GSENSOR_SDI),
	.GSENSOR_SDO(GSENSOR_SDO),
	.HEX0(HEX0),
	.HEX1(HEX1),
	.HEX2(HEX2),
	.HEX3(HEX3),
	.HEX4(HEX4),
	.HEX5(HEX5),
	.KEY(KEY),
	.LEDR(LEDR),
	.MAX10_CLK1_50(MAX10_CLK1_50),
	.MAX10_CLK2_50(MAX10_CLK2_50),
	.SW(SW),
	.VGA_B(VGA_B),
	.VGA_G(VGA_G),
	.VGA_HS(VGA_HS),
	.VGA_R(VGA_R),
	.VGA_VS(VGA_VS)
);
initial 
begin 
#16000000 $finish;
end 

// MAX10_CLK1_50
always
begin
	MAX10_CLK1_50 = 1'b0;
	MAX10_CLK1_50 = #500000 1'b1;
	#500000;
end 

// SW[0]
initial
begin
	SW[0] = 1'b1;
	SW[0] = #1000000 1'b0;
end 
endmodule

